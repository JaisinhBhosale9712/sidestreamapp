{"version":3,"sources":["logo.svg","components/login.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","url","Login","classes","useState","name","setName","database","setDatabase","setDatabase1","data","setData","setData1","dataintersection","setDataintersection","i","setI","j","setJ","dataundo","setDataundo","changeStatus","event","index","status","index1","map","key","console","warn","text","Math","random","AppBar","position","Toolbar","Typography","variant","className","Button","onClick","fetch","concat","method","cache","headers","body","JSON","stringify","then","response","json","log","color","window","location","reload","style","marginTop","id","toUpperCase","code","type","resolved_backlog","resolved_unresolved","unresolved_backlog","Form","onSubmit","Control","tabindex","placeholder","value","onChange","target","handleChange","App","req","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c345c3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\nlet url = \"https://sidestreamapp.ew.r.appspot.com/\"\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState(\"\");\r\n    const [database, setDatabase] = useState(false);\r\n    const [database1, setDatabase1] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    const [data1, setData1] = useState([]);\r\n    const [dataintersection, setDataintersection] = useState([]);\r\n    const [i, setI] = useState(1);\r\n    const [j, setJ] = useState(0);\r\n    const [dataundo, setDataundo] = useState();\r\n    function handleSubmit(event) {\r\n        setDatabase(true);\r\n        setDatabase1(Math.random());\r\n        getData();\r\n        getDataundo();\r\n        console.warn(dataundo)\r\n    }\r\n    function handleChange(event) {\r\n        setName(event.target.value)\r\n\r\n    }\r\n    function getData() {\r\n        fetch(url).then((response) => response.json()).then((json) => {\r\n            setData(json);\r\n            console.warn(\"yes runs agan\")\r\n        });\r\n    }\r\n    function getDataundo() {\r\n        fetch(url.concat(\"undo_all\")).then((response) => response.json()).then((json) => {\r\n            setDataundo(json);\r\n            console.warn(\"yes runs agan\")\r\n        });\r\n    }\r\n    function getDataintersection() {\r\n        fetch(url.concat(\"get_list_intersection_counts\"),{\r\n            method: \"POST\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"content_type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json()).then((json) => {\r\n            setDataintersection(json);\r\n            console.warn(\"yes runs agan\")\r\n        });\r\n    }\r\n    function renderHeader() {\r\n        let headerElement = [\"index\", \"Status\", \"code\", \"text\", \" Click to change Status\"]\r\n        return (headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        }));\r\n    }\r\n    function renderintersectionHeader() {\r\n        let headerElement = [\"resolved_backlog\", \"resolved_unresolved\", \"resolved_unresolved\"]\r\n        return (headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        }));\r\n    }\r\n    function renderBody() {\r\n        return data && data.map(({ code, index, status, text }) => {\r\n            return (<tr key={index}>\r\n                <td>{index}</td>\r\n                <td>{status}</td>\r\n                <td>{code}</td>\r\n                <td>{text}</td>\r\n                <td className='opration'>\r\n                    {status == \"resolved\" ? <button type=\"submit\" onClick={(event) => changeStatus(event, index, status)} className=\"buttonundo\"> UNRESOLVE </button> : status == \"unresolved\" ? <button onClick={(event) => changeStatus(event, index, status)} style={{ color: \"green\" }} className=\"buttonundo\"> RESOLVE </button> : \"\"}\r\n                </td>\r\n            </tr>);\r\n        })\r\n    }\r\n    function renderintersectionBody() {\r\n        return dataintersection && dataintersection.map(({ resolved_backlog, resolved_unresolved, unresolved_backlog }) => {\r\n            return (<tr>\r\n                <td>{resolved_backlog}</td>\r\n                <td>{resolved_unresolved}</td>\r\n                <td>{unresolved_backlog}</td>\r\n            </tr>);\r\n        })\r\n    }\r\n    function changeStatus(event, index, status) {\r\n        var index1 = index;\r\n        data.map((key, index) => {\r\n            if (key.index == index1) {\r\n                console.warn(\"hi\")\r\n                console.warn(data[index1].status)\r\n                if (status == \"resolved\") {\r\n                    data[index1].status = \"unresolved\"\r\n                    data[index1].text = \"Error ABC occured, that is `unresolved`\"\r\n                }\r\n                else {\r\n                    data[index1].status = \"resolved\"\r\n                    data[index1].text = \"Error ABC occured, that is `resolved`\"\r\n                }\r\n                setData(data)\r\n                setData1(Math.random())\r\n                setI(index)\r\n                setJ(j + 1)\r\n                console.warn(data)\r\n            }\r\n        })\r\n    }\r\n    function handleClick() {\r\n        if (data[i].status == \"resolved\") {\r\n            data[i].status = \"unresolved\"\r\n            data[i].text = \"Error ABC occured, that is `unresolved`\"\r\n        }\r\n        else {\r\n            data[i].status = \"resolved\"\r\n            data[i].text = \"Error ABC occured, that is `resolved`\"\r\n        }\r\n        setData(data)\r\n        setData1(Math.random())\r\n    }\r\n    function handleClick1() {\r\n        getDataintersection();\r\n        setDatabase(\"intersection\")\r\n        setData1(Math.random())\r\n        console.log(database)\r\n    }\r\n    function handleClick2() {\r\n        setDatabase(true)\r\n    }\r\n    function handleClickundo() {\r\n        setData(dataundo)\r\n    }\r\n    // useEffect(()=>{setDataundo(data)},[])\r\n    return (\r\n        <div>{database == true ?\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                        </Typography>\r\n                        <Button onClick={handleClick1} color=\"inherit\">Intersection</Button>\r\n                        <Button onClick={handleClick} color=\"inherit\">Undo</Button>\r\n                        <Button color=\"inherit\" onClick={() => window.location.reload()}>Logout</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <h1 style={{ marginTop: \"50px\" }}>Welcome {name}</h1>\r\n                <h3 style={{ marginTop: \"60px\" }}> Requests = {j} </h3>\r\n                <table style={{ marginTop: \"5px\" }} id=\"data\">\r\n                    <thead>\r\n                        <tr>{renderHeader()}</tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {renderBody()}\r\n                    </tbody>\r\n                </table>\r\n            </div> : database == \"intersection\" ?\r\n                <div>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n\r\n                            </Typography>\r\n                            <Button color=\"inherit\" onClick={handleClick2}>Home</Button>\r\n                            <Button color=\"inherit\" onClick={() => window.location.reload()}>Logout</Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <h1 style={{ marginTop: \"50px\" }}>Welcome {name}</h1>\r\n                    <table style={{ marginTop: \"5px\" }} id=\"data\">\r\n                        <thead>\r\n                            <tr>{renderintersectionHeader()}</tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderintersectionBody()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                : <div><h1 style={{ marginTop: \"30px\" }}>Sidestream Coding Challenge</h1><div className=\"gh-signin\" >\r\n                    <div>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Control tabindex=\"3\" type=\"text\" placeholder=\"Operators name\" className=\"gh-input\" value={name} onChange={(event) => handleChange(event)}></Form.Control>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" className=\"btn\">\r\n                                Login\r\n                        </Button>\r\n                        </Form>\r\n                    </div>\r\n                </div></div>}\r\n        </div>\r\n    );\r\n}\r\nexport default Login;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/login';\nimport {\n  BrowseRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\n\nfunction App(req,res) {\n  return (\n    \n    <div className=\"App\">\n      <Login/>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}